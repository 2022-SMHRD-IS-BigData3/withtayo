<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.henry.testDbManager.mapper">
  
  <select id="dLogin" parameterType="com.henry.testEntity.Driver" resultType="com.henry.testEntity.Driver">
  	select * from b_driver where d_id=#{d_id} and d_pw=#{d_pw}  
  </select>
  
  <select id="busCheck" parameterType="com.henry.testEntity.Bus" resultType="com.henry.testEntity.Bus">
	select * from bus where b_id=#{b_id}
  </select>
  
  <select id="pLogin" parameterType="com.henry.testEntity.Passenger" resultType="com.henry.testEntity.Passenger">
  	select * from passenger where p_id=#{p_id} and p_pw=#{p_pw}
  </select>
  
  <select id="getStops" parameterType="com.henry.testEntity.B_Stop" resultType="com.henry.testEntity.B_Stop">
  	select nodeid, nodenm from b_stop where nodenm like '%' || #{nodenm} || '%'
  </select>
  
  <insert id="crawlAndInsert" parameterType="com.henry.testEntity.R_Info">
  	insert into r_info (routeid, routeno, endnodenm, startnodenm) values(#{routeid}, #{routeno}, #{endnodenm}, #{startnodenm})
  </insert>
  
  <select id="getStops2" parameterType="com.henry.testEntity.B_Stop" resultType="com.henry.testEntity.B_Stop">
  	select * from B_Stop where nodenm=#{nodenm}
  </select>
  
  <select id="getRoute" parameterType="java.lang.String" resultType="com.henry.testEntity.R_Info">
  	select * from R_Info where routeid=#{routeID}
  </select>
  
  <select id="checkDupeFav" parameterType="com.henry.testEntity.Favorite" resultType="com.henry.testEntity.Favorite">
  	select * from Fav where routeid=#{routeid} and f_dprt=#{f_dprt} and f_arrv=#{f_arrv}
  </select>
  
  <insert id="addFav" parameterType="com.henry.testEntity.Favorite">
  	insert into fav (p_id, f_id, routeid, f_dprt, f_arrv, routeno) values(#{p_id}, seq_f_id.NEXTVAL , #{routeid}, #{f_dprt}, #{f_arrv}, #{routeno})
  </insert>
  
  <select id="getFavs" parameterType="java.lang.String" resultType="com.henry.testEntity.Favorite">
  	select * from fav where p_id=#{p_id}
  </select>
  
  <delete id="trimRecent" parameterType="com.henry.testEntity.Recent">
  	delete from recent where p_id=#{p_id} and rownum=1
  </delete>
  
  <insert id="addRecent" parameterType="com.henry.testEntity.Recent">
	insert into recent (rec_id, p_id, rec_dprt, rec_arrv) values(seq_rec_id.NEXTVAL, #{p_id}, #{rec_dprt}, #{rec_arrv})
  </insert>
  
  <select id="recentOFCheck" parameterType="com.henry.testEntity.Recent" resultType="com.henry.testEntity.Recent">
  	select * from recent where p_id=#{p_id}
  </select>
  
  <select id="getRecent" parameterType="java.lang.String" resultType="com.henry.testEntity.Recent">
  	select * from recent where p_id=#{p_id}
  </select>
  
  <insert id="bookPreview" parameterType="com.henry.testEntity.Book_Info">
  	insert into Book_Info (blog_id, routeid, routeno, dprtnode, arrvnode, p_id, dprtname, arrvname) values(book_prev_seq.NEXTVAL, #{routeid}, #{routeno}, #{dprtnode}, #{arrvnode}, #{p_id}, #{dprtname}, #{arrvname})
  </insert>
  
  <select id="getBookPrev" parameterType="com.henry.testEntity.Book_Info" resultType="com.henry.testEntity.Book_Info">
  	SELECT *
	FROM (SELECT *
    FROM Book_Info
    WHERE p_id = #{p_id}
    ORDER BY booktime DESC)
	WHERE ROWNUM = 1
  </select>
  <!-- DUPLICATE WITH 'getBookingByBID' CHECK USAGE BEFORE REFACTORING !!!!!!!!!!!!!!!!!!!!!!!!!!!!-->
  <select id="getBookingPSG" parameterType="java.lang.String" resultType="com.henry.testEntity.Book_Info">
  	select * from book_info where blog_id = #{blog_id}
  </select>
  
  <insert id="packageBooking" parameterType="com.henry.testEntity.Book_Info">
  	update book_info set b_id=#{b_id} where blog_id=#{blog_id}
  </insert>
  
  <insert id="pjoin" parameterType="com.henry.testEntity.Passenger">
	  insert into passenger
	  values(#{p_id},#{p_pw},#{p_ph})
  </insert>
  
  <insert id="djoin" parameterType="com.henry.testEntity.Driver">
	  insert into b_driver
	  values(#{d_id},#{d_pw})
  </insert>
  
  <select id="getBookingByBID" parameterType="java.lang.String" resultType="com.henry.testEntity.Book_Info">
  	select * from book_info where b_id=#{b_id}
  </select>
  
  <select id="getRouteByName" parameterType="java.lang.String" resultType="com.henry.testEntity.R_Info">
  	select * from r_info where routeno=#{routeno}
  </select>
  
  <insert id="addShift" parameterType="com.henry.testEntity.Shift">
  	insert into bus_shift (shift_id, d_id, b_id, routeno, routeid) values(seq_shift_id.NEXTVAL, #{d_id}, #{b_id}, #{routeno}, #{routeid})
  </insert>
  
  <update id="updateAcceptance" parameterType="com.henry.testEntity.Book_Info">
  	update book_info set accepted=#{accepted} where blog_id=#{blog_id}
  </update>
  
  <select id="cancelCheck" parameterType="java.lang.String" resultType="com.henry.testEntity.Book_Info">
  	select * from book_info where blog_id=#{blog_id}
  </select>
  
  <delete id="writeOff" parameterType="com.henry.testEntity.Book_Info">
  	delete from book_info where blog_id=#{blog_id}
  </delete>
  
  <insert id="archive" parameterType="com.henry.testEntity.Book_Info">
  	insert into book_record (bookrec_id, canceled, accepted, b_id, arrvname, dprtname, booktime, p_id, arrvnode, dprtnode, routeno, routeid) values(bookrec_seq.NEXTVAL, #{canceled}, #{accepted}, #{b_id}, #{arrvname}, #{dprtname}, #{booktime}, #{p_id}, #{arrvnode}, #{dprtnode}, #{routeno}, #{routeid})
  </insert>
  
  <update id="updatePsgNum" parameterType="java.lang.String">
  	update bus_shift set num_psg=num_psg-1 where b_id=#{b_id}
  </update>
  
  <update id="updateBusLoc" parameterType="com.henry.testEntity.Shift">
   update bus_shift set nodeid=#{nodeid}, nodenm=#{nodenm}, nodeord=#{nodeord} where b_id=#{b_id}
  </update>
  
  <select id="getBooking" parameterType="com.henry.testEntity.Book_Info" resultType="com.henry.testEntity.Book_Info">
  	select * from book_info where blog_id=#{blog_id}
  </select>
  
  <delete id="delBookInfo" parameterType="java.lang.String">
  	delete from book_info where blog_id=#{blog_id}
  </delete>
  
  <insert id="archiveBookingLog" parameterType="com.henry.testEntity.Book_Info">
	insert into book_record (bookrec_id, accepted, b_id, arrvname, dprtname, booktime, p_id, arrvnode, dprtnode, routeno, routeid) values(seq_shift_log.NEXTVAL, #{accepted}, #{b_id}, #{arrvname}, #{dprtname}, #{booktime}, #{p_id}, #{arrvnode}, #{dprtnode}, #{routeno}, #{routeid})
  </insert>
  
  <update id="addWarning" parameterType="java.lang.String">
  	update passenger set p_warning=p_warning+1 where p_id=#{p_id}
  </update>
  
  <delete id="delBookById" parameterType="java.lang.String">
  	delete from book_info where blog_id=#{blog_id}
  </delete>
</mapper>